FROM quay.io/jupyter/r-notebook

USER root

WORKDIR /build

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
 && apt-get install -y git g++ less emacs nano wget micro libomp5 cmake fftw-dev pkg-config libomp-dev

RUN git clone --recursive https://github.com/microsoft/LightGBM \
 && cd LightGBM \
 && mkdir build \
 && cd build \
 && cmake .. \
 && make -j4 \
 && cp ../lib_lightgbm.so /usr/local/lib/

RUN cd /build \
 && git clone https://gitlab-scm.partners.org/zzz-public/nsrr.git

RUN wget https://www.fftw.org/fftw-3.3.10.tar.gz \
 && tar xzvf fftw-3.3.10.tar.gz \
 && cd fftw-3.3.10 \
 && ./configure --enable-shared \
 && make \
 && make install \
 && ls -la \
 && ls -l .libs/ \
 && cp .libs/libfftw3.so /usr/local/lib/

RUN cd /home/jovyan/ \
  && pip install pybind11

ENV LD_LIBRARY_PATH=/usr/local/lib/

RUN apt-get install -y 

RUN mkdir /data \
 && mkdir /data1 \
 && mkdir /data2 \
 && cd / \
 && wget https://zzz.bwh.harvard.edu/dist/luna/tutorial.zip \
 && unzip tutorial.zip \
 && rm tutorial.zip
 
RUN cd /build \
 && git clone https://github.com/remnrem/luna-base.git \
 && cd luna-base \
 && make -j 2 LGBM=1 LGBM_PATH=/build/LightGBM \
 && ln -s /build/luna-base/luna /usr/local/bin/luna \
 && ln -s /build/luna-base/destrat /usr/local/bin/destrat \
 && ln -s /build/luna-base/behead /usr/local/bin/behead \
 && ln -s /build/luna-base/fixrows /usr/local/bin/fixrows \
 && sudo cp libluna.a /usr/local/lib/

RUN R -e "install.packages('git2r', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('plotrix', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('geosphere', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('viridis', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('shiny', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('data.table', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('xtable', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('DT', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('shinyFiles', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('shinydashboard', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('lubridate', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('wkb', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('aws.s3', repos='http://cran.rstudio.com/')" \
 && R -e "install.packages('shinybusy', repos='http://cran.rstudio.com/')"

RUN cd /build \
 && cp /build/LightGBM/lib_lightgbm.so /usr/local/lib/ \
 && cp /build/LightGBM/lib_lightgbm.so /usr/lib/ \
 && rm -rf luna \
 && git clone https://github.com/remnrem/luna.git \
 && echo 'PKG_LIBS=include/libluna.a -L/usr/local/lib/ -L${LGBM_PATH} -lfftw3 -l_lightgbm' >> luna/src/Makevars \
 && LGBM=1 FFTW=/usr/local/ LGBM_PATH=/build/LightGBM/ R CMD INSTALL luna

RUN echo 'options(defaultPackages=c(getOption("defaultPackages"),"luna" ) )' > ~/.Rprofile

# force rebuild of lunapi below
ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" skipcache

# make lunapi 
RUN pip install pandas==2.1.1 numpy==1.26.4 scipy==1.11.1 matplotlib==3.8.2 \
 && pip install plotly==5.22.0 nbformat==5.9.2 ipywidgets==8.1.1 \
 && cd /build \
 && git clone https://github.com/remnrem/luna-api.git \
 && cd luna-api \
 && cp CMakeLists.txt.docker CMakeLists.txt \
 && pip install . 

USER jovyan

WORKDIR /lunapi

RUN ln -s /tutorial /lunapi/tutorial

ENV PYTHONPATH=/build/luna-api

# CMD [ "/bin/bash" ]
